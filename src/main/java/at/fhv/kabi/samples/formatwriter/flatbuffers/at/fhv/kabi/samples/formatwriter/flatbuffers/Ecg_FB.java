// automatically generated by the FlatBuffers compiler, do not modify

package at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Ecg_FB extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Ecg_FB getRootAsEcg_FB(ByteBuffer _bb) { return getRootAsEcg_FB(_bb, new Ecg_FB()); }
  public static Ecg_FB getRootAsEcg_FB(ByteBuffer _bb, Ecg_FB obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Ecg_FB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int signalid() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int afib() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createEcg_FB(FlatBufferBuilder builder,
      int signalid,
      int afib) {
    builder.startTable(2);
    Ecg_FB.addAfib(builder, afib);
    Ecg_FB.addSignalid(builder, signalid);
    return Ecg_FB.endEcg_FB(builder);
  }

  public static void startEcg_FB(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addSignalid(FlatBufferBuilder builder, int signalid) { builder.addInt(0, signalid, 0); }
  public static void addAfib(FlatBufferBuilder builder, int afib) { builder.addInt(1, afib, 0); }
  public static int endEcg_FB(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Ecg_FB get(int j) { return get(new Ecg_FB(), j); }
    public Ecg_FB get(Ecg_FB obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

