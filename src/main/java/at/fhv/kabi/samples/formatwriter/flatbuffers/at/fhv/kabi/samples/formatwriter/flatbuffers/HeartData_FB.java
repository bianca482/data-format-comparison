// automatically generated by the FlatBuffers compiler, do not modify

package at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class HeartData_FB extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static HeartData_FB getRootAsHeartData_FB(ByteBuffer _bb) { return getRootAsHeartData_FB(_bb, new HeartData_FB()); }
  public static HeartData_FB getRootAsHeartData_FB(ByteBuffer _bb, HeartData_FB obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public HeartData_FB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int status() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers.Body_FB body() { return body(new at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers.Body_FB()); }
  public at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers.Body_FB body(at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers.Body_FB obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createHeartData_FB(FlatBufferBuilder builder,
      int status,
      int bodyOffset) {
    builder.startTable(2);
    HeartData_FB.addBody(builder, bodyOffset);
    HeartData_FB.addStatus(builder, status);
    return HeartData_FB.endHeartData_FB(builder);
  }

  public static void startHeartData_FB(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addStatus(FlatBufferBuilder builder, int status) { builder.addInt(0, status, 0); }
  public static void addBody(FlatBufferBuilder builder, int bodyOffset) { builder.addOffset(1, bodyOffset, 0); }
  public static int endHeartData_FB(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishHeartData_FBBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedHeartData_FBBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public HeartData_FB get(int j) { return get(new HeartData_FB(), j); }
    public HeartData_FB get(HeartData_FB obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

