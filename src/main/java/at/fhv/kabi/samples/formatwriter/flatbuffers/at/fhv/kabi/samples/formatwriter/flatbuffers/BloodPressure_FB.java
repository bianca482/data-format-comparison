// automatically generated by the FlatBuffers compiler, do not modify

package at.fhv.kabi.samples.formatwriter.flatbuffers.at.fhv.kabi.samples.formatwriter.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class BloodPressure_FB extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static BloodPressure_FB getRootAsBloodPressure_FB(ByteBuffer _bb) { return getRootAsBloodPressure_FB(_bb, new BloodPressure_FB()); }
  public static BloodPressure_FB getRootAsBloodPressure_FB(ByteBuffer _bb, BloodPressure_FB obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public BloodPressure_FB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int diastole() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int systole() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createBloodPressure_FB(FlatBufferBuilder builder,
      int diastole,
      int systole) {
    builder.startTable(2);
    BloodPressure_FB.addSystole(builder, systole);
    BloodPressure_FB.addDiastole(builder, diastole);
    return BloodPressure_FB.endBloodPressure_FB(builder);
  }

  public static void startBloodPressure_FB(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addDiastole(FlatBufferBuilder builder, int diastole) { builder.addInt(0, diastole, 0); }
  public static void addSystole(FlatBufferBuilder builder, int systole) { builder.addInt(1, systole, 0); }
  public static int endBloodPressure_FB(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public BloodPressure_FB get(int j) { return get(new BloodPressure_FB(), j); }
    public BloodPressure_FB get(BloodPressure_FB obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

